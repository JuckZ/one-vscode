{
  "name": "timesavior",
  "displayName": "TimeSavior",
  "version": "0.0.10",
  "description": "I will add more features in the future. But now, it's just a demo to help me study and it may contains a lot of others' code now. If you have any questions, please contact me.",
  "categories": [
    "Other",
    "Themes",
    "Snippets",
    "Keymaps",
    "Programming Languages",
    "Extension Packs",
    "Debuggers",
    "Formatters",
    "Linters",
    "SCM Providers",
    "Language Packs"
  ],
  "keywords": [
    "vscode",
    "extension"
  ],
  "homepage": "https://github.com/JuckZ/timesavior#readme",
  "bugs": {
    "url": "https://github.com/JuckZ/timesavior/issues",
    "email": "juckz@foxmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/JuckZ/timesavior.git"
  },
  "license": "SEE LICENSE IN LICENSE",
  "author": "Juck",
  "publisher": "JuckZ",
  "main": "./dist/extension.js",
  "files": [
    "dist",
    "package.json",
    "README.md",
    "images/icon.png"
  ],
  "scripts": {
    "build": "tsup src/extension.ts --external vscode",
    "build:all": "nr build:theme && nr build:icon && tsup src/extension.ts --external vscode",
    "build:icon": "esno src/carbon-icon/build.ts",
    "build:theme": "esno src/vitesse-theme/index.ts",
    "dev": "nr build --watch",
    "lint": "eslint \"src/**/*.ts\"",
    "lint1": "eslint . --fix",
    "pack": "vsce package --no-dependencies",
    "publish": "vsce publish --no-dependencies",
    "release": "bumpp && nr publish",
    "pretest": "nr build && nr lint",
    "test": "vitest",
    "test1": "node ./out/test/runTest.js",
    "typecheck": "tsc --noEmit",
    "vscode:prepublish": "nr build"
  },
  "contributes": {
    "commands": [
      {
        "command": "timesavior.createPreviewPanel",
        "title": "Create TimeSavior Preview Panel"
      },
      {
        "command": "editor.sortPackageJson",
        "title": "Sort package.json"
      },
      {
        "command": "where-am-i.config",
        "category": "Where Am I",
        "title": "Config the name and color"
      },
      {
        "command": "timesavior.helloWorld",
        "title": "Hello World"
      },
      {
        "command": "timesavior.commentLine",
        "title": "Comment Line"
      },
      {
        "command": "timesavior.printDefinitionsForActiveEditor",
        "title": "Print Definitions For ActiveEditor",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "nodeDependencies.refreshEntry",
        "title": "Refresh"
      },
      {
        "command": "nodeDependencies.addEntry",
        "title": "addEntry"
      },
      {
        "command": "nodeDependencies.editEntry",
        "title": "editEntry"
      },
      {
        "command": "nodeDependencies.deleteEntry",
        "title": "deleteEntry"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Project Name In StatusBar extension configuration",
      "properties": {
        "where-am-i.colorful": {
          "type": "boolean",
          "default": true,
          "description": "Use color"
        },
        "where-am-i.color": {
          "type": "string",
          "default": "",
          "description": "The color of status text. When not defined, a random color will be used based on the project name."
        },
        "where-am-i.align": {
          "type": "string",
          "enum": [
            "left",
            "right"
          ],
          "default": "left",
          "description": "Defines The alignment of the label, requires restart of vscode"
        },
        "where-am-i.alignPriority": {
          "type": "number",
          "default": 100000,
          "description": "Defines priority of the label. Higher values mean the label should be shown more to the left, requires restart of vscode"
        },
        "where-am-i.textTransfrom": {
          "type": "string",
          "enum": [
            "none",
            "uppercase",
            "lowercase",
            "capitalize"
          ],
          "default": "capitalize",
          "description": "Defines project name text style inside template"
        },
        "where-am-i.icon": {
          "type": "string",
          "default": "folder-opened",
          "description": "Codicon id"
        },
        "where-am-i.template": {
          "type": "string",
          "default": "{icon} {project-name}",
          "description": "Defines template of project name placeholder"
        },
        "where-am-i.projectSetting": {
          "type": "object",
          "default": {},
          "description": "Project preference"
        }
      }
    },
    "grammars": [
      {
        "language": "juckz",
        "scopeName": "source.jz",
        "path": "./syntaxes/juckz.tmLanguage.json"
      }
    ],
    "iconThemes": [
      {
        "id": "turtles",
        "label": "Turtles",
        "path": "./fileicons/turtles-icon-theme.json"
      }
    ],
    "keybindings": [
      {
        "key": "ctrl+.",
        "command": "workbench.action.showCommands"
      },
      {
        "key": "ctrl+alt+.",
        "command": "timesavior.helloWorld"
      }
    ],
    "languages": [
      {
        "id": "juckz",
        "aliases": [
          "JuckZ",
          "juckz"
        ],
        "extensions": [
          "jz"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "markdown": "github",
    "markdown.previewStyles": [
      ".themes/markdown/style.css"
    ],
    "menus": {
      "view/title": [
        {
          "command": "nodeDependencies.refreshEntry",
          "when": "view == nodeDependencies",
          "group": "navigation"
        },
        {
          "command": "nodeDependencies.addEntry",
          "when": "view == nodeDependencies"
        }
      ],
      "view/item/context": [
        {
          "command": "nodeDependencies.editEntry",
          "when": "view == nodeDependencies && viewItem == dependency",
          "group": "inline"
        },
        {
          "command": "nodeDependencies.deleteEntry",
          "when": "view == nodeDependencies && viewItem == dependency"
        }
      ],
      "commandPalette": [
        {
          "command": "editor.sortPackageJson",
          "when": "resourceFilename == package.json"
        },
        {
          "command": "timesavior.commentLine",
          "when": "editorLangId == markdown"
        }
      ]
    },
    "productIconThemes": [
      {
        "id": "icons-carbon",
        "label": "Carbon Icons",
        "path": "./icons/icons-carbon/icons-carbon.json"
      }
    ],
    "qna": "marketplace",
    "snippets": [
      {
        "language": "javascript",
        "path": "./snippets/js.code-snippets"
      },
      {
        "language": "juckz",
        "path": "./snippets/jz.code-snippets"
      },
      {
        "path": "./snippets/all.code-snippets"
      }
    ],
    "themes": [
      {
        "label": "Vitesse Light",
        "uiTheme": "vs",
        "path": "./themes/vitesse-light.json"
      },
      {
        "label": "Vitesse Dark",
        "uiTheme": "vs-dark",
        "path": "./themes/vitesse-dark.json"
      },
      {
        "label": "Vitesse Black",
        "uiTheme": "vs-dark",
        "path": "./themes/vitesse-black.json"
      },
      {
        "label": "Vitesse Light Soft",
        "uiTheme": "vs",
        "path": "./themes/vitesse-light-soft.json"
      },
      {
        "label": "Vitesse Dark Soft",
        "uiTheme": "vs-dark",
        "path": "./themes/vitesse-dark-soft.json"
      },
      {
        "label": "Monokai",
        "uiTheme": "vs-dark",
        "path": "./themes/Monokai-color-theme.json"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "ftpExplorer",
          "name": "FTP Explorer"
        }
      ],
      "package-explorer": [
        {
          "id": "nodeDependencies",
          "name": "Node Dependencies",
          "when": "explorer"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "package-explorer",
          "title": "Package Explorer",
          "icon": "media/dep.svg"
        }
      ]
    }
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "dependencies": {
    "ftp": "^0.3.10",
    "marked": "^5.0.2",
    "read-pkg-up": "^7.0.1",
    "resolve": "^1.22.2",
    "sort-package-json": "^1.57.0"
  },
  "devDependencies": {
    "@antfu/eslint-config": "^0.38.4",
    "@antfu/ni": "^0.21.2",
    "@iconify/json": "^2.2.78",
    "@types/fs-extra": "^9.0.13",
    "@types/ftp": "^0.3.33",
    "@types/glob": "^8.1.0",
    "@types/marked": "^5.0.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "^18.15.11",
    "@types/resolve": "^1.20.2",
    "@types/vscode": "^1.78.0",
    "@typescript-eslint/eslint-plugin": "^5.59.1",
    "@typescript-eslint/parser": "^5.59.1",
    "@vscode/test-electron": "^2.3.0",
    "bumpp": "^9.1.0",
    "eslint": "^8.39.0",
    "esno": "^0.16.3",
    "fs-extra": "^10.1.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "pnpm": "^7.29.1",
    "rimraf": "^4.4.1",
    "svgo": "^1.3.2",
    "taze": "^0.10.1",
    "tsup": "^6.7.0",
    "typescript": "^5.0.4",
    "vite": "^4.2.1",
    "vitest": "^0.29.8",
    "vsce": "^2.15.0",
    "webfonts-generator": "^0.4.0"
  },
  "extensionPack": [
    "Bito.Bito",
    "DavidAnson.vscode-markdownlint",
    "GitHub.copilot-nightly",
    "Gruntfuggly.todo-tree",
    "antfu.icons-carbon",
    "antfu.slidev",
    "antfu.theme-vitesse",
    "dbaeumer.vscode-eslint",
    "eamodio.gitlens",
    "naumovs.color-highlight",
    "richie5um2.vscode-sort-json",
    "yzhang.markdown-all-in-one"
  ],
  "extensionDependencies": [
    "fabiospampinato.vscode-open-in-github"
  ],
  "packageManager": "pnpm@7.29.1",
  "engines": {
    "vscode": "^1.78.0"
  },
  "icon": "images/icon.png",
  "galleryBanner": {
    "color": "#000000",
    "theme": "dark"
  },
  "preview": true
}
